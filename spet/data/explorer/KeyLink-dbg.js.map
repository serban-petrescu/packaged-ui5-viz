{"version":3,"sources":["../../../../../src/spet/data/explorer/KeyLink.js"],"names":["metadata","properties","sourceKey","type","defaultValue","targetKey","findNodeByKey","oGraph","sKey","aNodes","getNodes","i","length","getKey","setSourceKey","setProperty","setAssociation","setTargetKey","getSource","oSource","getAssociation","getParent","getSourceKey","getId","getTarget","oTarget","getTargetKey"],"mappings":";;AAEA;;;;;;;;;;;AAQCA,U,EAAW;AACVC,eAAY;AACX;;;;;AAKAC,eAAW,EAACC,MAAM,QAAP,EAAiBC,cAAc,EAA/B,EANA;AAOX;;;;;AAKAC,eAAW,EAACF,MAAM,QAAP,EAAiBC,cAAc,EAA/B;AAZA;;AAgBb;;;;;;;AAjBW,G;AAwBXE,e,yBAAcC,M,EAAQC,I,EAAM;AAC3B,OAAIC,SAASF,OAAOG,QAAP,MAAqB,EAAlC;AACA,QAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,OAAOG,MAA3B,EAAmC,EAAED,CAArC,EAAuC;AACtC,QAAIF,OAAOE,CAAP,EAAUE,MAAV,IAAoBJ,OAAOE,CAAP,EAAUE,MAAV,OAAuBL,IAA/C,EAAqD;AACpD,YAAOC,OAAOE,CAAP,CAAP;AACA;AACD;AACD,UAAO,IAAP;AACA,G;AAEDG,c,wBAAaN,I,EAAM;AAClB,QAAKO,WAAL,CAAiB,WAAjB,EAA8BP,IAA9B;AACA,QAAKQ,cAAL,CAAoB,QAApB,EAA8B,IAA9B;AACA,G;AAEDC,c,wBAAaT,I,EAAM;AAClB,QAAKO,WAAL,CAAiB,WAAjB,EAA8BP,IAA9B;AACA,QAAKQ,cAAL,CAAoB,QAApB,EAA8B,IAA9B;AACA,G;AAEDE,W,uBAAY;AACX,OAAIC,UAAU,KAAKC,cAAL,CAAoB,QAApB,CAAd;AACA,OAAID,OAAJ,EAAa;AACZ,WAAOA,OAAP;AACA,IAFD,MAEO,IAAI,KAAKE,SAAL,EAAJ,EAAsB;AAC5BF,cAAU,KAAKb,aAAL,CAAmB,KAAKe,SAAL,EAAnB,EAAqC,KAAKC,YAAL,EAArC,CAAV;AACA,SAAKN,cAAL,CAAoB,QAApB,EAA8BG,OAA9B;AACA,WAAOA,UAAUA,QAAQI,KAAR,EAAV,GAA4B,IAAnC;AACA;AACD,UAAO,IAAP;AACA,G;AAEDC,W,uBAAY;AACX,OAAIC,UAAU,KAAKL,cAAL,CAAoB,QAApB,CAAd;AACA,OAAIK,OAAJ,EAAa;AACZ,WAAOA,OAAP;AACA,IAFD,MAEO,IAAI,KAAKJ,SAAL,EAAJ,EAAsB;AAC5BI,cAAU,KAAKnB,aAAL,CAAmB,KAAKe,SAAL,EAAnB,EAAqC,KAAKK,YAAL,EAArC,CAAV;AACA,SAAKV,cAAL,CAAoB,QAApB,EAA8BS,OAA9B;AACA,WAAOA,UAAUA,QAAQF,KAAR,EAAV,GAA4B,IAAnC;AACA;AACD,UAAO,IAAP;AACA","file":"KeyLink.js","sourceRoot":"src","sourcesContent":["import Link from \"./Link\";\n\n/**\n * Link which can refer its nodes by using their keys.\n * The inherited associations should not be used directly.\n * @class\n * @name spet.data.explorer.KeyLink\n * @extends spet.data.explorer.Link\n */\nexport default class KeyLink extends Link {\n\tmetadata = {\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * The key of the source node.\n\t\t\t * @name spet.data.explorer.KeyLink#sourceKey\n\t\t\t * @type {string}\n\t\t\t */\n\t\t\tsourceKey: {type: \"string\", defaultValue: \"\"},\n\t\t\t/**\n\t\t\t * The key of the target node.\n\t\t\t * @name spet.data.explorer.KeyLink#targetKey\n\t\t\t * @type {string}\n\t\t\t */\n\t\t\ttargetKey: {type: \"string\", defaultValue: \"\"}\n\t\t}\n\t}\n\n\t/**\n\t * Finds the graph node which has the given key.\n\t * @method spet.data.explorer.KeyLink#findNodeByKey\n\t * @param {spet.data.explorer.Graph} oGraph The parent graph.\n\t * @param {string} sKey The key used for the search.\n\t * @returns {spet.data.explorer.Node|null} The found node or null if nothing was found.\n\t */\n\tfindNodeByKey(oGraph, sKey) {\n\t\tvar aNodes = oGraph.getNodes() || [];\n\t\tfor (var i = 0; i < aNodes.length; ++i){\n\t\t\tif (aNodes[i].getKey && aNodes[i].getKey() === sKey) {\n\t\t\t\treturn aNodes[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetSourceKey(sKey) {\n\t\tthis.setProperty(\"sourceKey\", sKey);\n\t\tthis.setAssociation(\"source\", null);\n\t}\n\n\tsetTargetKey(sKey) {\n\t\tthis.setProperty(\"targetKey\", sKey);\n\t\tthis.setAssociation(\"target\", null);\n\t}\n\n\tgetSource() {\n\t\tvar oSource = this.getAssociation(\"source\");\n\t\tif (oSource) {\n\t\t\treturn oSource;\n\t\t} else if (this.getParent()) {\n\t\t\toSource = this.findNodeByKey(this.getParent(), this.getSourceKey());\n\t\t\tthis.setAssociation(\"source\", oSource);\n\t\t\treturn oSource ? oSource.getId() : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetTarget() {\n\t\tvar oTarget = this.getAssociation(\"target\");\n\t\tif (oTarget) {\n\t\t\treturn oTarget;\n\t\t} else if (this.getParent()) {\n\t\t\toTarget = this.findNodeByKey(this.getParent(), this.getTargetKey());\n\t\t\tthis.setAssociation(\"target\", oTarget);\n\t\t\treturn oTarget ? oTarget.getId() : null;\n\t\t}\n\t\treturn null;\n\t}\n}\n"]}